这个是我在学习机器学习时接触到的开发工具，它在数据挖掘时比较好用。

它的独有优点是：用户可以自由地把多行代码放入一个代码块，执行时可以只执行本代码块。

这一点是非常方便的。

举个例子，在做数据分析时，对于data1这个矩阵，在做运算之前，可以先打印出来data1的形状是几行几列的，以及它的数据具体是什么；

那么可以把打印矩阵形状和打印矩阵的代码放入一个代码块，再新建一个代码块来做所需的运算。

之所以将上面两个步骤（即打印矩阵和做具体运算）分开进行，是因为矩阵有可能非常大，打印出来的内容非常多，而运算结果的打印显示在后面，就不够清晰。

除此以外，jupyter notebook可以添加标记，例如一级二级标题，这个在学习阶段时也是比较方便的，可以很清晰地进行标记。
当然，我刚开始使用jupyter notebook时，跟你一样，觉得它一点也不好用，运行速度慢，打开jupyter notebook的速度也慢，还得在网页上运行，找文件也不方便，等等等等… 太多槽点

分块运行可以更方便的调试数据读取，特征工程的代码；所以一我般是先在jupyter里理清楚代码逻辑，写一些demo跑一下，然后转到Pycharm里写项目，写好注释提交git，再把代码复制到jupyter里用更详细的文本写清楚算法逻辑，和运行结果什么的，存下来以便给BOSS看或者以后自己快速回忆

1 一次运行, 多次阅读,保存运行结果

2 交互式编程, 边看边写

3 可以添加各种元素,比如图片,视频, 链接, 文档(比代码注释要好看), 相当于PPT

用过Jupyter notebook才能明白它的爽啊！
我最大的感觉是，它是一张草稿纸，你可以通过它来进行你的思考探索过程，交互式的进行，每一步都能看到结果，也很方便查看之前的结果。
支持的格式很多，Markdown，Latex等都支持，还有很方便的快捷键，就是个在线编辑器嘛！
如果通过github+https://nbviewer.jupyter.org/ 还能将.ipynb文件可视化的分享给别人。
关键是，还免费~


  代码可读性非常强，非常适合教学 人工智能数据分析的说明性文档，魔法函数，程序自动运行多次 查看运行时间 占用内存
他可以随时随地 分享成各类文件，还可以随时做成ppt供大家观看，集编程和写作于一身
 内核是ipython，ipython具有强大的自动补全功能
 shift+回车 运行   ，→vim编辑器

  老师们好，我叫叶逸辉，生活安逸事业辉煌，逸辉，是一名共产党员，本科来自佛山科学技术学院的电气工程及其自动化专业。专业方面的学习主要是软、硬件结合，硬件主要是指电路设计，软件部分设计主要是以C语言为主，软件设计注重分步、分模块实现，注重逻辑表达。
  本科毕业设计做的是，（带有管理模式）三种解锁方式以及两种报警模式的多功能密码锁设计，软件设计部分，我会首先构思想要的功能，然后尝试画出系统的主程序流程图，然后再画出各分模块程序的流程图，然后再依次做程序设计。
  暑假期间，完成过一个计算文本相似度的入门实验，主要是弄懂大致的步骤，以及掌握python入门的基础可以完成，在实验的基础之上，紧接着参与了一个新冠肺炎疫情文献挖掘项目，由于个人身体原因，只做了前期工作参与。
  跟项目的时间不是太长，但是有一定感悟，跟从老师学习，想提高两方面的能力，一是切“蛋糕”的能力，二是“消化”能力，老师接到一个项目会评估，将一个项目大蛋糕对应的切开交给符合不同“消化”能力的人去吃，自己作为初学者，也可以用同样的思想去处理分到自己头上的“蛋糕”，不断地训练提高自己分析、剖析问题的切蛋糕能力，以及对新知识、新问题的解决吸收“消化”能力。
  跟从老师学习，注重反馈，参加过几次腾讯会议，很深刻的感受到，老师有清晰地知识脉络，知道一个学生某个阶段该做什么，该怎么做，注重反馈的学习过程，就像猛踩油门而不怕偏航，老师给我们把向，在这个过程中，也希望学会自己“开车”，即使没有老师的帮助，自己也能学会高效地前进。
  阅读了两篇综述类文献：一个是16年的中文处理信息发展报告，以及18年自然语言处理研究报告，对研究领域有一个初步的认识。
  
 
review世界最先进的人怎么搞


























我发生改动了
 




